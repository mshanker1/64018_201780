{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa280\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A brief Example\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf2   > lprec <- make.lp(0, 4)\
  > set.objfn(lprec, c(1, 3, 6.24, 0.1))\
  > add.constraint(lprec, c(0, 78.26, 0, 2.9), ">=", 92.3)\
  > add.constraint(lprec, c(0.24, 0, 11.31, 0), "<=", 14.8)\
  > add.constraint(lprec, c(12.68, 0, 0.08, 0.9), ">=", 4)\
  > set.bounds(lprec, lower = c(28.6, 18), columns = c(1, 4))\
  > set.bounds(lprec, upper = 48.98, columns = 4)\
  > RowNames <- c("THISROW", "THATROW", "LASTROW")\
  > ColNames <- c("COLONE", "COLTWO", "COLTHREE", "COLFOUR")\
  > dimnames(lprec) <- list(RowNames, ColNames)\
\pard\pardeftab720\sl280\partightenfactor0

\f0 \cf2 Lets take a look at what we have done so far.\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2   > lprec  # or equivalently print(lprec)\
  Model name: \
              COLONE    COLTWO  COLTHREE   COLFOUR          \
  Minimize         1         3      6.24       0.1          \
  THISROW          0     78.26         0       2.9  >=  92.3\
  THATROW       0.24         0     11.31         0  <=  14.8\
  LASTROW      12.68         0      0.08       0.9  >=     4\
  Type          Real      Real      Real      Real          \
  Upper          Inf       Inf       Inf     48.98          \
  Lower         28.6         0         0        18          \
\pard\pardeftab720\sl280\partightenfactor0

\f0 \cf2 Now lets solve the model.\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2   > solve(lprec)\
  [1] 0\
\
  > get.objective(lprec)\
  [1] 31.78276\
\
  > get.variables(lprec)\
  [1] 28.60000  0.00000  0.00000 31.82759\
\
  > get.constraints(lprec)\
  [1]  92.3000   6.8640 391.2928\
\
\
#\
#author Huber Flores\
#\
\
\
library(lpSolveAPI)\
\
library(ggplot2)\
library(reshape)\
library(gridExtra)\
\
#To be extended to provide these variables dinamically into the model\
cloud<-data.frame(servertype=c('t1','t2','t3'), servercapacity=c(10,8,12), costserver=c(0.5,0.75,1.25))\
\
qoeload <- data.frame(qoegroups=c('a1','a2','a3'), qoeusers=c(5,10,15))\
\
\
#make.lp(constraints, decision variables)\
lpmodel<-make.lp(0,3)\
\
\
set.objfn(lpmodel, c(0.5,0.75,1.25))\
add.constraint(lpmodel, c(10, 0, 0), ">=", 50)\
add.constraint(lpmodel, c(0, 8, 0), ">=", 25)\
add.constraint(lpmodel, c(0,0,12), ">=", 100)\
\
RowNames <- (cloud$servertype)\
ColNames <- (qoeload$qoegroups)\
\
dimnames(lpmodel) <- list(RowNames, ColNames)\
\
\
solve(lpmodel)\
\
get.objective(lpmodel)\
\
get.variables(lpmodel)\
\
get.constraints(lpmodel)\
\
write.lp(lpmodel,'model.lp',type='lp')\
}